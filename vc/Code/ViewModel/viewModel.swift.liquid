//
//  {{ prefix }}{{ module_info.name }}{{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright {{ year }} {{ developer.company }}. All rights reserved.
//

import UIKit
import RxSwift
import RxCocoa

protocol {{ module_info.name }}ViewModelProtocol: MVVMViewModel {
    func close()
    func showError(message: String)
}

class {{ module_info.name }}ViewModel: {{ module_info.name }}ViewModelProtocol {
    // MARK: - Constants
    
    // MARK: - Properties
    var router: MVVMRouter
    
    // MARK: - Method
    func close() {
        router.dismiss(animated: true, completion: nil)
    }

    func showError(message: String) {
        let context = {{ module_info.name }}Router.RouteType.error(message: message) {}
        router.enqueueRoute(with: context)
    }
    
    // MARK: - Lifecycle
    init(router: MVVMRouter) {
        self.router = router
    }
}

